import UIKit
import Parse

var activityindicator: UIActivityIndicatorView = UIActivityIndicatorView()


class ViewController: UIViewController {
    
    var signupactive = true
    
    func displayalert(title: String,message: String) {
        
        var alert = UIAlertController(title: title, message: message, preferredStyle: UIAlertControllerStyle.Alert)
        alert.addAction(UIAlertAction(title: "OK", style: .Default, handler: { (action) in
            self.dismissViewControllerAnimated(true, completion: nil)
        }))
        
        
        self.presentViewController(alert, animated: true, completion: nil)
        
    }
    
    @IBOutlet var signupbutton: UIButton!
    
    @IBOutlet var registeredtext: UILabel!
    
    @IBOutlet var loginbutton: UIButton!
    
    
    @IBOutlet var username: UITextField!
    
    @IBOutlet var password: UITextField!
    
    @IBAction func LogIn(sender: AnyObject) {
        
        if signupactive == true {
            
            signupbutton.setTitle("Log In", forState: UIControlState.Normal)
            registeredtext.text = "Not Registered?"
            loginbutton.setTitle("Sign Up", forState: UIControlState.Normal)
            signupactive = false
            
        } else {
            signupbutton.setTitle("Sign Up", forState: UIControlState.Normal)
            registeredtext.text = "Already Registered?"
            loginbutton.setTitle("Log In", forState: UIControlState.Normal)
            signupactive = true
            
            
        }
        
        
        
        
    }
    
    @IBAction func Signup(sender: AnyObject) {
        
        if username.text == "" || password.text == "" {
            
            displayalert("Invalid Entry", message: "Enter Username and Password")
            
            
        } else {
            activityindicator = UIActivityIndicatorView(frame:CGRectMake(0,0,50,50))
            activityindicator.center = self.view.center
            activityindicator.hidesWhenStopped = true
            activityindicator.activityIndicatorViewStyle = UIActivityIndicatorViewStyle.Gray
            view.addSubview(activityindicator)
            activityindicator.startAnimating()
            UIApplication.sharedApplication().beginIgnoringInteractionEvents()
            
            var errormessage = "Please try Again!"

            
            if signupactive == true {
            
            var user = PFUser()
            user.username = username.text
            user.password = password.text
            
                
            user.signUpInBackgroundWithBlock({ (success, error) in
                activityindicator.stopAnimating()
                UIApplication.sharedApplication().endIgnoringInteractionEvents()
                
                if error == nil {
                    
                    //signup succesful
                    dispatch_async(dispatch_get_main_queue(), {
                        self.performSegueWithIdentifier("LogIn", sender: self)
                        print("Signup succesful")

                    })
                   
                    
                } else {
                    
                    if let errorstring = error!.userInfo["error"] as? String {
                        
                        errormessage = errorstring
                    }
                    
                 self.displayalert("Failed Signup", message: errormessage)
                    
                }
                
                
            })
                
            } else {
                
                PFUser.logInWithUsernameInBackground(username.text!, password: password.text!, block: { (user, error) in
                    activityindicator.stopAnimating()
                    UIApplication.sharedApplication().endIgnoringInteractionEvents()
                    
                    if self.username != nil {
                        //logged in
                        dispatch_async(dispatch_get_main_queue(), {
                            self.performSegueWithIdentifier("LogIn", sender: self)
                            print("Login succesful")

                        })
                        
                    } else {
                        
                        if let errorstring = error!.userInfo["error"] as? String {
                            
                            errormessage = errorstring
                        }
                        
                        self.displayalert("Failed Login", message: errormessage)
                        
                    }
                })
                
                
            }
            
        }
        
        
    }
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        }
        override func viewDidAppear(animated: Bool) {
       if PFUser.currentUser() != nil {                                     // to keep the user logged In to the App
          dispatch_async(dispatch_get_main_queue(), {
            self.performSegueWithIdentifier("LogIn", sender: self)
                //print("Login succesful")

    })
            
        }
 
    }
        
    


    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

}
        
        
